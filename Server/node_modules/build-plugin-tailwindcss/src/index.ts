import type { IPlugin } from 'build-scripts';
import * as tailwindcss from 'tailwindcss';
// @ts-ignore 类型文件缺失
import * as postcssPxToVW from 'postcss-px-to-viewport';
import Config from 'webpack-chain';

const checkPostcssLoader = (config: Config, ruleName: string) =>
  config.module.rules.has(ruleName) &&
  config.module.rule(ruleName).uses.has('postcss-loader');

const plugin: IPlugin = ({ onGetWebpackConfig }) => {
  onGetWebpackConfig((config) => {
    const rules = [
      'css',
      'css-module',
      'css-global',
      'scss',
      'scss-module',
      'scss-global',
    ];

    rules.forEach((rule) => {
      if (checkPostcssLoader(config, rule)) {
        config.module
          .rule(rule)
          .use('postcss-loader')
          .tap((options) => ({
            ...options,
            postcssOptions: {
              ...options.postcssOptions,
              plugins: [
                tailwindcss,
                postcssPxToVW({
                  unitToConvert: 'rem',
                  viewportWidth: 375 / 16,
                  minPixelValue: 0,
                }),
                ...options.postcssOptions.plugins,
              ],
            },
          }));
      }
    });
  });
};

export default plugin;
